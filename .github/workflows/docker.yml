name: "Build Java Application"
on:
  workflow_call:
    inputs:
      java-version:  
        description: 'java version'
        type: string
        default: '11'
        required: false
      app-version:
        description: 'apps version'
        type: string
        required: true
        default: '1'
      app-name:
        description: 'apps version'
        type: string
        required: true
      nfs-server-path:
        description: 'nfs path for app'
        type: string
        required: true
      nfs-mount-path:
        description: 'nfs mount path for app'
        type: string
        required: true
      xms:
        description: 'java xms'
        type: string
        default: "128m"
        required: true
      xmx:
        description: 'java xmx'
        default: "256m"
        type: string
        required: true
      host:
        type: string
        required: true
      username:
        type: string
        required: true
      container_port:
        type: string
        required: true
      container_node_port:
        type: string
        required: true
     
    secrets:
      ansible-private-key:
        required: true
      gcloud-key:
        required: true

jobs:
  build_job:
    name: Build java
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.8.2
      - run: mvn --batch-mode --update-snapshots verify
        shell: bash
      - run: mkdir ${{ inputs.app-name }} && cp target/*.jar ${{ inputs.app-name }}/${{ inputs.app-name }}-v${{ inputs.app-version }}.jar
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: ${{ inputs.app-name }}
      - run: |
          cat << EOF > Dockerfile 
          FROM openjdk:11-jre-slim 
          RUN mkdir -p /app/config ${{inputs.nfs-mount-path}}
          COPY ${{ inputs.app-name }}/${{ inputs.app-name }}-v${{ inputs.app-version }}.jar /app
          COPY properties/application.properties /app/config
          RUN chown -R 3002:3002 /app
          USER 3002
          EXPOSE 8080 
          ENTRYPOINT ["java","-server","-Xms${{inputs.xms}}", "-Xmx${{inputs.xmx}}","-jar","/app/${{ inputs.app-name }}-v${{ inputs.app-version }}.jar","-Dspring.config.location=/app/config/application.properties"]
          EOF
        shell: bash
      - run: |
          cat Dockerfile
        shell: bash
      
      # Push to GCR
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: rise-prod-327008
          service_account_key: ${{ secrets.gcloud-key }}
          export_default_credentials: true
      - name: Login and configure gcloud for docker
        run: gcloud --quiet auth configure-docker
        shell: bash
      - name: Build Docker Image
        run: |
          docker build -t asia.gcr.io/rise-prod-327008/${{ inputs.app-name }}:${{ inputs.app-version }} . \
          && docker push asia.gcr.io/rise-prod-327008/${{ inputs.app-name }}:${{ inputs.app-version }}
        shell: bash
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ inputs.HOST }}
          username: ansible
          key: ${{ secrets.ansible-private-key }}
          script: |
            gcloud --quiet auth configure-docker
            docker run -v ${{ inputs.nfs-server-path }}:${{ inputs.nfs-mount-path }} -d -p "${{ inputs.container_node_port }}:${{ inputs.container_port }}" --name ${{ inputs.app-name }} asia.gcr.io/rise-prod-327008/${{ inputs.app-name }}:${{ inputs.app-version }}